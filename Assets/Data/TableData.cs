using System;
using System.Collections.Generic;
using BansheeGz.BGDatabase;

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

#pragma warning disable 414

		//=============================================================
		//||                   Generated by BansheeGz Code Generator ||
		//=============================================================

		public partial class TBL_MOVE_CARD : BGEntity
		{

			//=============================================================
			//||                   Generated by BansheeGz Code Generator ||
			//=============================================================

			public class Factory : BGEntity.EntityFactory
			{
				public BGEntity NewEntity(BGMetaEntity meta)
				{
					return new TBL_MOVE_CARD(meta);
				}
				public BGEntity NewEntity(BGMetaEntity meta, BGId id)
				{
					return new TBL_MOVE_CARD(meta, id);
				}
			}
			private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
			public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
			{
				get
				{
					if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4871748722261721329,2890707906641499285));
					return _metaDefault;
				}
			}
			public static BansheeGz.BGDatabase.BGRepoEvents Events
			{
				get
				{
					return BGRepo.I.Events;
				}
			}
			private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
			public static int CountEntities
			{
				get
				{
					return MetaDefault.CountEntities;
				}
			}
			public System.String name
			{
				get
				{
					return _name[Index];
				}
				set
				{
					_name[Index] = value;
				}
			}
			public MoveType MoveType
			{
				get
				{
					return (MoveType) _MoveType[Index];
				}
				set
				{
					_MoveType[Index] = value;
				}
			}
			public System.Int32 Distance
			{
				get
				{
					return _Distance[Index];
				}
				set
				{
					_Distance[Index] = value;
				}
			}
			public System.Single Percent
			{
				get
				{
					return _Percent[Index];
				}
				set
				{
					_Percent[Index] = value;
				}
			}
			public System.String Comment
			{
				get
				{
					return _Comment[Index];
				}
				set
				{
					_Comment[Index] = value;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
			public static BansheeGz.BGDatabase.BGFieldEntityName _name
			{
				get
				{
					if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5120574290386162048,7495979722686343337));
					return _ufle12jhs77_name;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_MoveType;
			public static BansheeGz.BGDatabase.BGFieldEnum _MoveType
			{
				get
				{
					if(_ufle12jhs77_MoveType==null || _ufle12jhs77_MoveType.IsDeleted) _ufle12jhs77_MoveType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5455916567410830648,8221571151218153891));
					return _ufle12jhs77_MoveType;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Distance;
			public static BansheeGz.BGDatabase.BGFieldInt _Distance
			{
				get
				{
					if(_ufle12jhs77_Distance==null || _ufle12jhs77_Distance.IsDeleted) _ufle12jhs77_Distance=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4635682263990587347,12589798964238248124));
					return _ufle12jhs77_Distance;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Percent;
			public static BansheeGz.BGDatabase.BGFieldFloat _Percent
			{
				get
				{
					if(_ufle12jhs77_Percent==null || _ufle12jhs77_Percent.IsDeleted) _ufle12jhs77_Percent=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4818237330276403937,13149507083538030980));
					return _ufle12jhs77_Percent;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Comment;
			public static BansheeGz.BGDatabase.BGFieldString _Comment
			{
				get
				{
					if(_ufle12jhs77_Comment==null || _ufle12jhs77_Comment.IsDeleted) _ufle12jhs77_Comment=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(5211601573426285838,9146758092986032047));
					return _ufle12jhs77_Comment;
				}
			}
			private static readonly TBL_MOVE_CARD.Factory _factory0_PFS = new TBL_MOVE_CARD.Factory();
			private static readonly TBL_ATTACK_CARD.Factory _factory1_PFS = new TBL_ATTACK_CARD.Factory();
			private static readonly TBL_ENERGY_CARD.Factory _factory2_PFS = new TBL_ENERGY_CARD.Factory();
			private static readonly TBL_HEAL_CARD.Factory _factory3_PFS = new TBL_HEAL_CARD.Factory();
			private static readonly TBL_GUARD_CARD.Factory _factory4_PFS = new TBL_GUARD_CARD.Factory();
			private static readonly TBL_CARD_SETTINNG.Factory _factory5_PFS = new TBL_CARD_SETTINNG.Factory();
			private static readonly TBL_STAGE.Factory _factory6_PFS = new TBL_STAGE.Factory();
			private static readonly TBL_GAME_SETTING.Factory _factory7_PFS = new TBL_GAME_SETTING.Factory();
			public TBL_MOVE_CARD() : base(MetaDefault)
			{
			}
			public TBL_MOVE_CARD(BGId id) : base(MetaDefault, id)
			{
			}
			public TBL_MOVE_CARD(BGMetaEntity meta) : base(meta)
			{
			}
			public TBL_MOVE_CARD(BGMetaEntity meta, BGId id) : base(meta, id)
			{
			}
			public static TBL_MOVE_CARD FindEntity(Predicate<TBL_MOVE_CARD> filter)
			{
				return MetaDefault.FindEntity(entity => filter==null || filter((TBL_MOVE_CARD) entity)) as TBL_MOVE_CARD;
			}
			public static List<TBL_MOVE_CARD> FindEntities(Predicate<TBL_MOVE_CARD> filter, List<TBL_MOVE_CARD> result=null, Comparison<TBL_MOVE_CARD> sort=null)
			{
				result = result ?? new List<TBL_MOVE_CARD>();
				_find_Entities_Result.Clear();
				MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_MOVE_CARD) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_MOVE_CARD) e1, (TBL_MOVE_CARD) e2));
				if (_find_Entities_Result.Count != 0)
				{
					for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_MOVE_CARD) _find_Entities_Result[i]);
					_find_Entities_Result.Clear();
				}
				return result;
			}
			public static void ForEachEntity(Action<TBL_MOVE_CARD> action, Predicate<TBL_MOVE_CARD> filter=null, Comparison<TBL_MOVE_CARD> sort=null)
			{
				MetaDefault.ForEachEntity(entity => action((TBL_MOVE_CARD) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_MOVE_CARD) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_MOVE_CARD)e1,(TBL_MOVE_CARD)e2));
			}
			public static TBL_MOVE_CARD GetEntity(BGId entityId)
			{
				return (TBL_MOVE_CARD) MetaDefault.GetEntity(entityId);
			}
			public static TBL_MOVE_CARD GetEntity(int index)
			{
				return (TBL_MOVE_CARD) MetaDefault[index];
			}
			public static TBL_MOVE_CARD GetEntity(string entityName)
			{
				return (TBL_MOVE_CARD) MetaDefault.GetEntity(entityName);
			}
			public static TBL_MOVE_CARD NewEntity()
			{
				return (TBL_MOVE_CARD) MetaDefault.NewEntity();
			}
		}


		//=============================================================
		//||                   Generated by BansheeGz Code Generator ||
		//=============================================================

		public partial class TBL_ATTACK_CARD : BGEntity
		{

			//=============================================================
			//||                   Generated by BansheeGz Code Generator ||
			//=============================================================

			public class Factory : BGEntity.EntityFactory
			{
				public BGEntity NewEntity(BGMetaEntity meta)
				{
					return new TBL_ATTACK_CARD(meta);
				}
				public BGEntity NewEntity(BGMetaEntity meta, BGId id)
				{
					return new TBL_ATTACK_CARD(meta, id);
				}
			}
			private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
			public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
			{
				get
				{
					if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5709699216890732665,12421109187614678432));
					return _metaDefault;
				}
			}
			public static BansheeGz.BGDatabase.BGRepoEvents Events
			{
				get
				{
					return BGRepo.I.Events;
				}
			}
			private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
			public static int CountEntities
			{
				get
				{
					return MetaDefault.CountEntities;
				}
			}
			public System.String name
			{
				get
				{
					return _name[Index];
				}
				set
				{
					_name[Index] = value;
				}
			}
			public System.Single Percent
			{
				get
				{
					return _Percent[Index];
				}
				set
				{
					_Percent[Index] = value;
				}
			}
			public System.Int32 Damage
			{
				get
				{
					return _Damage[Index];
				}
				set
				{
					_Damage[Index] = value;
				}
			}
			public System.Int32 EnergyCost
			{
				get
				{
					return _EnergyCost[Index];
				}
				set
				{
					_EnergyCost[Index] = value;
				}
			}
			public System.Collections.Generic.List<System.Int32> Positions
			{
				get
				{
					return _Positions[Index];
				}
				set
				{
					_Positions[Index] = value;
				}
			}
			public System.String Comment
			{
				get
				{
					return _Comment[Index];
				}
				set
				{
					_Comment[Index] = value;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
			public static BansheeGz.BGDatabase.BGFieldEntityName _name
			{
				get
				{
					if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5351669558131861786,9297124229893507007));
					return _ufle12jhs77_name;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Percent;
			public static BansheeGz.BGDatabase.BGFieldFloat _Percent
			{
				get
				{
					if(_ufle12jhs77_Percent==null || _ufle12jhs77_Percent.IsDeleted) _ufle12jhs77_Percent=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5602057394275224138,4381137467168564870));
					return _ufle12jhs77_Percent;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Damage;
			public static BansheeGz.BGDatabase.BGFieldInt _Damage
			{
				get
				{
					if(_ufle12jhs77_Damage==null || _ufle12jhs77_Damage.IsDeleted) _ufle12jhs77_Damage=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5028544267005982330,16128415209894546344));
					return _ufle12jhs77_Damage;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_EnergyCost;
			public static BansheeGz.BGDatabase.BGFieldInt _EnergyCost
			{
				get
				{
					if(_ufle12jhs77_EnergyCost==null || _ufle12jhs77_EnergyCost.IsDeleted) _ufle12jhs77_EnergyCost=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5303946144918707110,4245112788047873179));
					return _ufle12jhs77_EnergyCost;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldListInt _ufle12jhs77_Positions;
			public static BansheeGz.BGDatabase.BGFieldListInt _Positions
			{
				get
				{
					if(_ufle12jhs77_Positions==null || _ufle12jhs77_Positions.IsDeleted) _ufle12jhs77_Positions=(BansheeGz.BGDatabase.BGFieldListInt) MetaDefault.GetField(new BGId(5184458231017325819,17220253012852431792));
					return _ufle12jhs77_Positions;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Comment;
			public static BansheeGz.BGDatabase.BGFieldString _Comment
			{
				get
				{
					if(_ufle12jhs77_Comment==null || _ufle12jhs77_Comment.IsDeleted) _ufle12jhs77_Comment=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(5385967962657463966,16430685516767924374));
					return _ufle12jhs77_Comment;
				}
			}
			private static readonly TBL_MOVE_CARD.Factory _factory0_PFS = new TBL_MOVE_CARD.Factory();
			private static readonly TBL_ATTACK_CARD.Factory _factory1_PFS = new TBL_ATTACK_CARD.Factory();
			private static readonly TBL_ENERGY_CARD.Factory _factory2_PFS = new TBL_ENERGY_CARD.Factory();
			private static readonly TBL_HEAL_CARD.Factory _factory3_PFS = new TBL_HEAL_CARD.Factory();
			private static readonly TBL_GUARD_CARD.Factory _factory4_PFS = new TBL_GUARD_CARD.Factory();
			private static readonly TBL_CARD_SETTINNG.Factory _factory5_PFS = new TBL_CARD_SETTINNG.Factory();
			private static readonly TBL_STAGE.Factory _factory6_PFS = new TBL_STAGE.Factory();
			private static readonly TBL_GAME_SETTING.Factory _factory7_PFS = new TBL_GAME_SETTING.Factory();
			public TBL_ATTACK_CARD() : base(MetaDefault)
			{
			}
			public TBL_ATTACK_CARD(BGId id) : base(MetaDefault, id)
			{
			}
			public TBL_ATTACK_CARD(BGMetaEntity meta) : base(meta)
			{
			}
			public TBL_ATTACK_CARD(BGMetaEntity meta, BGId id) : base(meta, id)
			{
			}
			public static TBL_ATTACK_CARD FindEntity(Predicate<TBL_ATTACK_CARD> filter)
			{
				return MetaDefault.FindEntity(entity => filter==null || filter((TBL_ATTACK_CARD) entity)) as TBL_ATTACK_CARD;
			}
			public static List<TBL_ATTACK_CARD> FindEntities(Predicate<TBL_ATTACK_CARD> filter, List<TBL_ATTACK_CARD> result=null, Comparison<TBL_ATTACK_CARD> sort=null)
			{
				result = result ?? new List<TBL_ATTACK_CARD>();
				_find_Entities_Result.Clear();
				MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_ATTACK_CARD) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_ATTACK_CARD) e1, (TBL_ATTACK_CARD) e2));
				if (_find_Entities_Result.Count != 0)
				{
					for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_ATTACK_CARD) _find_Entities_Result[i]);
					_find_Entities_Result.Clear();
				}
				return result;
			}
			public static void ForEachEntity(Action<TBL_ATTACK_CARD> action, Predicate<TBL_ATTACK_CARD> filter=null, Comparison<TBL_ATTACK_CARD> sort=null)
			{
				MetaDefault.ForEachEntity(entity => action((TBL_ATTACK_CARD) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_ATTACK_CARD) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_ATTACK_CARD)e1,(TBL_ATTACK_CARD)e2));
			}
			public static TBL_ATTACK_CARD GetEntity(BGId entityId)
			{
				return (TBL_ATTACK_CARD) MetaDefault.GetEntity(entityId);
			}
			public static TBL_ATTACK_CARD GetEntity(int index)
			{
				return (TBL_ATTACK_CARD) MetaDefault[index];
			}
			public static TBL_ATTACK_CARD GetEntity(string entityName)
			{
				return (TBL_ATTACK_CARD) MetaDefault.GetEntity(entityName);
			}
			public static TBL_ATTACK_CARD NewEntity()
			{
				return (TBL_ATTACK_CARD) MetaDefault.NewEntity();
			}
		}


		//=============================================================
		//||                   Generated by BansheeGz Code Generator ||
		//=============================================================

		public partial class TBL_ENERGY_CARD : BGEntity
		{

			//=============================================================
			//||                   Generated by BansheeGz Code Generator ||
			//=============================================================

			public class Factory : BGEntity.EntityFactory
			{
				public BGEntity NewEntity(BGMetaEntity meta)
				{
					return new TBL_ENERGY_CARD(meta);
				}
				public BGEntity NewEntity(BGMetaEntity meta, BGId id)
				{
					return new TBL_ENERGY_CARD(meta, id);
				}
			}
			private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
			public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
			{
				get
				{
					if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4841451698179744560,3766798720612258992));
					return _metaDefault;
				}
			}
			public static BansheeGz.BGDatabase.BGRepoEvents Events
			{
				get
				{
					return BGRepo.I.Events;
				}
			}
			private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
			public static int CountEntities
			{
				get
				{
					return MetaDefault.CountEntities;
				}
			}
			public System.String name
			{
				get
				{
					return _name[Index];
				}
				set
				{
					_name[Index] = value;
				}
			}
			public System.Single Percent
			{
				get
				{
					return _Percent[Index];
				}
				set
				{
					_Percent[Index] = value;
				}
			}
			public System.Int32 EnergyIncrease
			{
				get
				{
					return _EnergyIncrease[Index];
				}
				set
				{
					_EnergyIncrease[Index] = value;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
			public static BansheeGz.BGDatabase.BGFieldEntityName _name
			{
				get
				{
					if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4630654517243287305,15891645152233926538));
					return _ufle12jhs77_name;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Percent;
			public static BansheeGz.BGDatabase.BGFieldFloat _Percent
			{
				get
				{
					if(_ufle12jhs77_Percent==null || _ufle12jhs77_Percent.IsDeleted) _ufle12jhs77_Percent=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4682116371940790447,5235393214934429629));
					return _ufle12jhs77_Percent;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_EnergyIncrease;
			public static BansheeGz.BGDatabase.BGFieldInt _EnergyIncrease
			{
				get
				{
					if(_ufle12jhs77_EnergyIncrease==null || _ufle12jhs77_EnergyIncrease.IsDeleted) _ufle12jhs77_EnergyIncrease=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5298728180882023001,3731403400724660125));
					return _ufle12jhs77_EnergyIncrease;
				}
			}
			private static readonly TBL_MOVE_CARD.Factory _factory0_PFS = new TBL_MOVE_CARD.Factory();
			private static readonly TBL_ATTACK_CARD.Factory _factory1_PFS = new TBL_ATTACK_CARD.Factory();
			private static readonly TBL_ENERGY_CARD.Factory _factory2_PFS = new TBL_ENERGY_CARD.Factory();
			private static readonly TBL_HEAL_CARD.Factory _factory3_PFS = new TBL_HEAL_CARD.Factory();
			private static readonly TBL_GUARD_CARD.Factory _factory4_PFS = new TBL_GUARD_CARD.Factory();
			private static readonly TBL_CARD_SETTINNG.Factory _factory5_PFS = new TBL_CARD_SETTINNG.Factory();
			private static readonly TBL_STAGE.Factory _factory6_PFS = new TBL_STAGE.Factory();
			private static readonly TBL_GAME_SETTING.Factory _factory7_PFS = new TBL_GAME_SETTING.Factory();
			public TBL_ENERGY_CARD() : base(MetaDefault)
			{
			}
			public TBL_ENERGY_CARD(BGId id) : base(MetaDefault, id)
			{
			}
			public TBL_ENERGY_CARD(BGMetaEntity meta) : base(meta)
			{
			}
			public TBL_ENERGY_CARD(BGMetaEntity meta, BGId id) : base(meta, id)
			{
			}
			public static TBL_ENERGY_CARD FindEntity(Predicate<TBL_ENERGY_CARD> filter)
			{
				return MetaDefault.FindEntity(entity => filter==null || filter((TBL_ENERGY_CARD) entity)) as TBL_ENERGY_CARD;
			}
			public static List<TBL_ENERGY_CARD> FindEntities(Predicate<TBL_ENERGY_CARD> filter, List<TBL_ENERGY_CARD> result=null, Comparison<TBL_ENERGY_CARD> sort=null)
			{
				result = result ?? new List<TBL_ENERGY_CARD>();
				_find_Entities_Result.Clear();
				MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_ENERGY_CARD) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_ENERGY_CARD) e1, (TBL_ENERGY_CARD) e2));
				if (_find_Entities_Result.Count != 0)
				{
					for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_ENERGY_CARD) _find_Entities_Result[i]);
					_find_Entities_Result.Clear();
				}
				return result;
			}
			public static void ForEachEntity(Action<TBL_ENERGY_CARD> action, Predicate<TBL_ENERGY_CARD> filter=null, Comparison<TBL_ENERGY_CARD> sort=null)
			{
				MetaDefault.ForEachEntity(entity => action((TBL_ENERGY_CARD) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_ENERGY_CARD) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_ENERGY_CARD)e1,(TBL_ENERGY_CARD)e2));
			}
			public static TBL_ENERGY_CARD GetEntity(BGId entityId)
			{
				return (TBL_ENERGY_CARD) MetaDefault.GetEntity(entityId);
			}
			public static TBL_ENERGY_CARD GetEntity(int index)
			{
				return (TBL_ENERGY_CARD) MetaDefault[index];
			}
			public static TBL_ENERGY_CARD GetEntity(string entityName)
			{
				return (TBL_ENERGY_CARD) MetaDefault.GetEntity(entityName);
			}
			public static TBL_ENERGY_CARD NewEntity()
			{
				return (TBL_ENERGY_CARD) MetaDefault.NewEntity();
			}
		}


		//=============================================================
		//||                   Generated by BansheeGz Code Generator ||
		//=============================================================

		public partial class TBL_HEAL_CARD : BGEntity
		{

			//=============================================================
			//||                   Generated by BansheeGz Code Generator ||
			//=============================================================

			public class Factory : BGEntity.EntityFactory
			{
				public BGEntity NewEntity(BGMetaEntity meta)
				{
					return new TBL_HEAL_CARD(meta);
				}
				public BGEntity NewEntity(BGMetaEntity meta, BGId id)
				{
					return new TBL_HEAL_CARD(meta, id);
				}
			}
			private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
			public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
			{
				get
				{
					if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5340075504782212186,15187745834791180712));
					return _metaDefault;
				}
			}
			public static BansheeGz.BGDatabase.BGRepoEvents Events
			{
				get
				{
					return BGRepo.I.Events;
				}
			}
			private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
			public static int CountEntities
			{
				get
				{
					return MetaDefault.CountEntities;
				}
			}
			public System.String name
			{
				get
				{
					return _name[Index];
				}
				set
				{
					_name[Index] = value;
				}
			}
			public System.Single Percent
			{
				get
				{
					return _Percent[Index];
				}
				set
				{
					_Percent[Index] = value;
				}
			}
			public System.Int32 HPIncrease
			{
				get
				{
					return _HPIncrease[Index];
				}
				set
				{
					_HPIncrease[Index] = value;
				}
			}
			public System.Int32 EnergyCost
			{
				get
				{
					return _EnergyCost[Index];
				}
				set
				{
					_EnergyCost[Index] = value;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
			public static BansheeGz.BGDatabase.BGFieldEntityName _name
			{
				get
				{
					if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4814696328881830361,17308141911184777864));
					return _ufle12jhs77_name;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Percent;
			public static BansheeGz.BGDatabase.BGFieldFloat _Percent
			{
				get
				{
					if(_ufle12jhs77_Percent==null || _ufle12jhs77_Percent.IsDeleted) _ufle12jhs77_Percent=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4777856561092794802,11257066669806451610));
					return _ufle12jhs77_Percent;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_HPIncrease;
			public static BansheeGz.BGDatabase.BGFieldInt _HPIncrease
			{
				get
				{
					if(_ufle12jhs77_HPIncrease==null || _ufle12jhs77_HPIncrease.IsDeleted) _ufle12jhs77_HPIncrease=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5745209542852802875,10509448764055359618));
					return _ufle12jhs77_HPIncrease;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_EnergyCost;
			public static BansheeGz.BGDatabase.BGFieldInt _EnergyCost
			{
				get
				{
					if(_ufle12jhs77_EnergyCost==null || _ufle12jhs77_EnergyCost.IsDeleted) _ufle12jhs77_EnergyCost=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5000249608712121404,16650636093408644019));
					return _ufle12jhs77_EnergyCost;
				}
			}
			private static readonly TBL_MOVE_CARD.Factory _factory0_PFS = new TBL_MOVE_CARD.Factory();
			private static readonly TBL_ATTACK_CARD.Factory _factory1_PFS = new TBL_ATTACK_CARD.Factory();
			private static readonly TBL_ENERGY_CARD.Factory _factory2_PFS = new TBL_ENERGY_CARD.Factory();
			private static readonly TBL_HEAL_CARD.Factory _factory3_PFS = new TBL_HEAL_CARD.Factory();
			private static readonly TBL_GUARD_CARD.Factory _factory4_PFS = new TBL_GUARD_CARD.Factory();
			private static readonly TBL_CARD_SETTINNG.Factory _factory5_PFS = new TBL_CARD_SETTINNG.Factory();
			private static readonly TBL_STAGE.Factory _factory6_PFS = new TBL_STAGE.Factory();
			private static readonly TBL_GAME_SETTING.Factory _factory7_PFS = new TBL_GAME_SETTING.Factory();
			public TBL_HEAL_CARD() : base(MetaDefault)
			{
			}
			public TBL_HEAL_CARD(BGId id) : base(MetaDefault, id)
			{
			}
			public TBL_HEAL_CARD(BGMetaEntity meta) : base(meta)
			{
			}
			public TBL_HEAL_CARD(BGMetaEntity meta, BGId id) : base(meta, id)
			{
			}
			public static TBL_HEAL_CARD FindEntity(Predicate<TBL_HEAL_CARD> filter)
			{
				return MetaDefault.FindEntity(entity => filter==null || filter((TBL_HEAL_CARD) entity)) as TBL_HEAL_CARD;
			}
			public static List<TBL_HEAL_CARD> FindEntities(Predicate<TBL_HEAL_CARD> filter, List<TBL_HEAL_CARD> result=null, Comparison<TBL_HEAL_CARD> sort=null)
			{
				result = result ?? new List<TBL_HEAL_CARD>();
				_find_Entities_Result.Clear();
				MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_HEAL_CARD) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_HEAL_CARD) e1, (TBL_HEAL_CARD) e2));
				if (_find_Entities_Result.Count != 0)
				{
					for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_HEAL_CARD) _find_Entities_Result[i]);
					_find_Entities_Result.Clear();
				}
				return result;
			}
			public static void ForEachEntity(Action<TBL_HEAL_CARD> action, Predicate<TBL_HEAL_CARD> filter=null, Comparison<TBL_HEAL_CARD> sort=null)
			{
				MetaDefault.ForEachEntity(entity => action((TBL_HEAL_CARD) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_HEAL_CARD) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_HEAL_CARD)e1,(TBL_HEAL_CARD)e2));
			}
			public static TBL_HEAL_CARD GetEntity(BGId entityId)
			{
				return (TBL_HEAL_CARD) MetaDefault.GetEntity(entityId);
			}
			public static TBL_HEAL_CARD GetEntity(int index)
			{
				return (TBL_HEAL_CARD) MetaDefault[index];
			}
			public static TBL_HEAL_CARD GetEntity(string entityName)
			{
				return (TBL_HEAL_CARD) MetaDefault.GetEntity(entityName);
			}
			public static TBL_HEAL_CARD NewEntity()
			{
				return (TBL_HEAL_CARD) MetaDefault.NewEntity();
			}
		}


		//=============================================================
		//||                   Generated by BansheeGz Code Generator ||
		//=============================================================

		public partial class TBL_GUARD_CARD : BGEntity
		{

			//=============================================================
			//||                   Generated by BansheeGz Code Generator ||
			//=============================================================

			public class Factory : BGEntity.EntityFactory
			{
				public BGEntity NewEntity(BGMetaEntity meta)
				{
					return new TBL_GUARD_CARD(meta);
				}
				public BGEntity NewEntity(BGMetaEntity meta, BGId id)
				{
					return new TBL_GUARD_CARD(meta, id);
				}
			}
			private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
			public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
			{
				get
				{
					if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5157732959640009150,15915453534507349152));
					return _metaDefault;
				}
			}
			public static BansheeGz.BGDatabase.BGRepoEvents Events
			{
				get
				{
					return BGRepo.I.Events;
				}
			}
			private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
			public static int CountEntities
			{
				get
				{
					return MetaDefault.CountEntities;
				}
			}
			public System.String name
			{
				get
				{
					return _name[Index];
				}
				set
				{
					_name[Index] = value;
				}
			}
			public System.Single Percent
			{
				get
				{
					return _Percent[Index];
				}
				set
				{
					_Percent[Index] = value;
				}
			}
			public System.Int32 DamageReduction
			{
				get
				{
					return _DamageReduction[Index];
				}
				set
				{
					_DamageReduction[Index] = value;
				}
			}
			public System.String Comment
			{
				get
				{
					return _Comment[Index];
				}
				set
				{
					_Comment[Index] = value;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
			public static BansheeGz.BGDatabase.BGFieldEntityName _name
			{
				get
				{
					if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5353144234545565205,7136045983198090916));
					return _ufle12jhs77_name;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Percent;
			public static BansheeGz.BGDatabase.BGFieldFloat _Percent
			{
				get
				{
					if(_ufle12jhs77_Percent==null || _ufle12jhs77_Percent.IsDeleted) _ufle12jhs77_Percent=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4632576705148372710,3129270147578925952));
					return _ufle12jhs77_Percent;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_DamageReduction;
			public static BansheeGz.BGDatabase.BGFieldInt _DamageReduction
			{
				get
				{
					if(_ufle12jhs77_DamageReduction==null || _ufle12jhs77_DamageReduction.IsDeleted) _ufle12jhs77_DamageReduction=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5703293255474916187,14241657060469323936));
					return _ufle12jhs77_DamageReduction;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Comment;
			public static BansheeGz.BGDatabase.BGFieldString _Comment
			{
				get
				{
					if(_ufle12jhs77_Comment==null || _ufle12jhs77_Comment.IsDeleted) _ufle12jhs77_Comment=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(4777695381136393311,2582935960117281457));
					return _ufle12jhs77_Comment;
				}
			}
			private static readonly TBL_MOVE_CARD.Factory _factory0_PFS = new TBL_MOVE_CARD.Factory();
			private static readonly TBL_ATTACK_CARD.Factory _factory1_PFS = new TBL_ATTACK_CARD.Factory();
			private static readonly TBL_ENERGY_CARD.Factory _factory2_PFS = new TBL_ENERGY_CARD.Factory();
			private static readonly TBL_HEAL_CARD.Factory _factory3_PFS = new TBL_HEAL_CARD.Factory();
			private static readonly TBL_GUARD_CARD.Factory _factory4_PFS = new TBL_GUARD_CARD.Factory();
			private static readonly TBL_CARD_SETTINNG.Factory _factory5_PFS = new TBL_CARD_SETTINNG.Factory();
			private static readonly TBL_STAGE.Factory _factory6_PFS = new TBL_STAGE.Factory();
			private static readonly TBL_GAME_SETTING.Factory _factory7_PFS = new TBL_GAME_SETTING.Factory();
			public TBL_GUARD_CARD() : base(MetaDefault)
			{
			}
			public TBL_GUARD_CARD(BGId id) : base(MetaDefault, id)
			{
			}
			public TBL_GUARD_CARD(BGMetaEntity meta) : base(meta)
			{
			}
			public TBL_GUARD_CARD(BGMetaEntity meta, BGId id) : base(meta, id)
			{
			}
			public static TBL_GUARD_CARD FindEntity(Predicate<TBL_GUARD_CARD> filter)
			{
				return MetaDefault.FindEntity(entity => filter==null || filter((TBL_GUARD_CARD) entity)) as TBL_GUARD_CARD;
			}
			public static List<TBL_GUARD_CARD> FindEntities(Predicate<TBL_GUARD_CARD> filter, List<TBL_GUARD_CARD> result=null, Comparison<TBL_GUARD_CARD> sort=null)
			{
				result = result ?? new List<TBL_GUARD_CARD>();
				_find_Entities_Result.Clear();
				MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_GUARD_CARD) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_GUARD_CARD) e1, (TBL_GUARD_CARD) e2));
				if (_find_Entities_Result.Count != 0)
				{
					for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_GUARD_CARD) _find_Entities_Result[i]);
					_find_Entities_Result.Clear();
				}
				return result;
			}
			public static void ForEachEntity(Action<TBL_GUARD_CARD> action, Predicate<TBL_GUARD_CARD> filter=null, Comparison<TBL_GUARD_CARD> sort=null)
			{
				MetaDefault.ForEachEntity(entity => action((TBL_GUARD_CARD) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_GUARD_CARD) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_GUARD_CARD)e1,(TBL_GUARD_CARD)e2));
			}
			public static TBL_GUARD_CARD GetEntity(BGId entityId)
			{
				return (TBL_GUARD_CARD) MetaDefault.GetEntity(entityId);
			}
			public static TBL_GUARD_CARD GetEntity(int index)
			{
				return (TBL_GUARD_CARD) MetaDefault[index];
			}
			public static TBL_GUARD_CARD GetEntity(string entityName)
			{
				return (TBL_GUARD_CARD) MetaDefault.GetEntity(entityName);
			}
			public static TBL_GUARD_CARD NewEntity()
			{
				return (TBL_GUARD_CARD) MetaDefault.NewEntity();
			}
		}


		//=============================================================
		//||                   Generated by BansheeGz Code Generator ||
		//=============================================================

		public partial class TBL_CARD_SETTINNG : BGEntity
		{

			//=============================================================
			//||                   Generated by BansheeGz Code Generator ||
			//=============================================================

			public class Factory : BGEntity.EntityFactory
			{
				public BGEntity NewEntity(BGMetaEntity meta)
				{
					return new TBL_CARD_SETTINNG(meta);
				}
				public BGEntity NewEntity(BGMetaEntity meta, BGId id)
				{
					return new TBL_CARD_SETTINNG(meta, id);
				}
			}
			private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
			public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
			{
				get
				{
					if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5328082255816943840,3681045738132227483));
					return _metaDefault;
				}
			}
			public static BansheeGz.BGDatabase.BGRepoEvents Events
			{
				get
				{
					return BGRepo.I.Events;
				}
			}
			private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
			public static int CountEntities
			{
				get
				{
					return MetaDefault.CountEntities;
				}
			}
			public System.String name
			{
				get
				{
					return _name[Index];
				}
				set
				{
					_name[Index] = value;
				}
			}
			public System.Int32 MoveCardStartCount
			{
				get
				{
					return _MoveCardStartCount[Index];
				}
				set
				{
					_MoveCardStartCount[Index] = value;
				}
			}
			public System.Int32 MoveCardMaxCount
			{
				get
				{
					return _MoveCardMaxCount[Index];
				}
				set
				{
					_MoveCardMaxCount[Index] = value;
				}
			}
			public System.Single MoveCardDropPercent
			{
				get
				{
					return _MoveCardDropPercent[Index];
				}
				set
				{
					_MoveCardDropPercent[Index] = value;
				}
			}
			public System.Int32 AttackCardStartCount
			{
				get
				{
					return _AttackCardStartCount[Index];
				}
				set
				{
					_AttackCardStartCount[Index] = value;
				}
			}
			public System.Int32 AttackCardMaxCount
			{
				get
				{
					return _AttackCardMaxCount[Index];
				}
				set
				{
					_AttackCardMaxCount[Index] = value;
				}
			}
			public System.Single AttackCardDropPercent
			{
				get
				{
					return _AttackCardDropPercent[Index];
				}
				set
				{
					_AttackCardDropPercent[Index] = value;
				}
			}
			public System.Int32 GuardCardStartCount
			{
				get
				{
					return _GuardCardStartCount[Index];
				}
				set
				{
					_GuardCardStartCount[Index] = value;
				}
			}
			public System.Int32 GuardCardMaxCount
			{
				get
				{
					return _GuardCardMaxCount[Index];
				}
				set
				{
					_GuardCardMaxCount[Index] = value;
				}
			}
			public System.Single GuardCardDropPercent
			{
				get
				{
					return _GuardCardDropPercent[Index];
				}
				set
				{
					_GuardCardDropPercent[Index] = value;
				}
			}
			public System.Int32 EnergyCardStartCount
			{
				get
				{
					return _EnergyCardStartCount[Index];
				}
				set
				{
					_EnergyCardStartCount[Index] = value;
				}
			}
			public System.Int32 EnergyCardMaxCount
			{
				get
				{
					return _EnergyCardMaxCount[Index];
				}
				set
				{
					_EnergyCardMaxCount[Index] = value;
				}
			}
			public System.Single EnergyCardDropPercent
			{
				get
				{
					return _EnergyCardDropPercent[Index];
				}
				set
				{
					_EnergyCardDropPercent[Index] = value;
				}
			}
			public System.Int32 HealCardStartCount
			{
				get
				{
					return _HealCardStartCount[Index];
				}
				set
				{
					_HealCardStartCount[Index] = value;
				}
			}
			public System.Int32 HealCardMaxCount
			{
				get
				{
					return _HealCardMaxCount[Index];
				}
				set
				{
					_HealCardMaxCount[Index] = value;
				}
			}
			public System.Single HealCardDropPercent
			{
				get
				{
					return _HealCardDropPercent[Index];
				}
				set
				{
					_HealCardDropPercent[Index] = value;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
			public static BansheeGz.BGDatabase.BGFieldEntityName _name
			{
				get
				{
					if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5719911518731301014,11668248302365784492));
					return _ufle12jhs77_name;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_MoveCardStartCount;
			public static BansheeGz.BGDatabase.BGFieldInt _MoveCardStartCount
			{
				get
				{
					if(_ufle12jhs77_MoveCardStartCount==null || _ufle12jhs77_MoveCardStartCount.IsDeleted) _ufle12jhs77_MoveCardStartCount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5088523148882189553,10434725813669925788));
					return _ufle12jhs77_MoveCardStartCount;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_MoveCardMaxCount;
			public static BansheeGz.BGDatabase.BGFieldInt _MoveCardMaxCount
			{
				get
				{
					if(_ufle12jhs77_MoveCardMaxCount==null || _ufle12jhs77_MoveCardMaxCount.IsDeleted) _ufle12jhs77_MoveCardMaxCount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5405369782788286460,2928112194492119226));
					return _ufle12jhs77_MoveCardMaxCount;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_MoveCardDropPercent;
			public static BansheeGz.BGDatabase.BGFieldFloat _MoveCardDropPercent
			{
				get
				{
					if(_ufle12jhs77_MoveCardDropPercent==null || _ufle12jhs77_MoveCardDropPercent.IsDeleted) _ufle12jhs77_MoveCardDropPercent=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4918698197119574355,16558137917014316469));
					return _ufle12jhs77_MoveCardDropPercent;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_AttackCardStartCount;
			public static BansheeGz.BGDatabase.BGFieldInt _AttackCardStartCount
			{
				get
				{
					if(_ufle12jhs77_AttackCardStartCount==null || _ufle12jhs77_AttackCardStartCount.IsDeleted) _ufle12jhs77_AttackCardStartCount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5285338623290552277,6947834993495890854));
					return _ufle12jhs77_AttackCardStartCount;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_AttackCardMaxCount;
			public static BansheeGz.BGDatabase.BGFieldInt _AttackCardMaxCount
			{
				get
				{
					if(_ufle12jhs77_AttackCardMaxCount==null || _ufle12jhs77_AttackCardMaxCount.IsDeleted) _ufle12jhs77_AttackCardMaxCount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5167005579795352537,7335673674765486252));
					return _ufle12jhs77_AttackCardMaxCount;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_AttackCardDropPercent;
			public static BansheeGz.BGDatabase.BGFieldFloat _AttackCardDropPercent
			{
				get
				{
					if(_ufle12jhs77_AttackCardDropPercent==null || _ufle12jhs77_AttackCardDropPercent.IsDeleted) _ufle12jhs77_AttackCardDropPercent=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5203784532423042165,17243944343681124021));
					return _ufle12jhs77_AttackCardDropPercent;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_GuardCardStartCount;
			public static BansheeGz.BGDatabase.BGFieldInt _GuardCardStartCount
			{
				get
				{
					if(_ufle12jhs77_GuardCardStartCount==null || _ufle12jhs77_GuardCardStartCount.IsDeleted) _ufle12jhs77_GuardCardStartCount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4969589792876712316,5011695576264063896));
					return _ufle12jhs77_GuardCardStartCount;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_GuardCardMaxCount;
			public static BansheeGz.BGDatabase.BGFieldInt _GuardCardMaxCount
			{
				get
				{
					if(_ufle12jhs77_GuardCardMaxCount==null || _ufle12jhs77_GuardCardMaxCount.IsDeleted) _ufle12jhs77_GuardCardMaxCount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4976571451606777855,12953053013161827510));
					return _ufle12jhs77_GuardCardMaxCount;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_GuardCardDropPercent;
			public static BansheeGz.BGDatabase.BGFieldFloat _GuardCardDropPercent
			{
				get
				{
					if(_ufle12jhs77_GuardCardDropPercent==null || _ufle12jhs77_GuardCardDropPercent.IsDeleted) _ufle12jhs77_GuardCardDropPercent=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5431441587215170635,14065172535660156845));
					return _ufle12jhs77_GuardCardDropPercent;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_EnergyCardStartCount;
			public static BansheeGz.BGDatabase.BGFieldInt _EnergyCardStartCount
			{
				get
				{
					if(_ufle12jhs77_EnergyCardStartCount==null || _ufle12jhs77_EnergyCardStartCount.IsDeleted) _ufle12jhs77_EnergyCardStartCount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4988851150498941872,9358897894833146245));
					return _ufle12jhs77_EnergyCardStartCount;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_EnergyCardMaxCount;
			public static BansheeGz.BGDatabase.BGFieldInt _EnergyCardMaxCount
			{
				get
				{
					if(_ufle12jhs77_EnergyCardMaxCount==null || _ufle12jhs77_EnergyCardMaxCount.IsDeleted) _ufle12jhs77_EnergyCardMaxCount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4961221586739078344,8194323670293074094));
					return _ufle12jhs77_EnergyCardMaxCount;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_EnergyCardDropPercent;
			public static BansheeGz.BGDatabase.BGFieldFloat _EnergyCardDropPercent
			{
				get
				{
					if(_ufle12jhs77_EnergyCardDropPercent==null || _ufle12jhs77_EnergyCardDropPercent.IsDeleted) _ufle12jhs77_EnergyCardDropPercent=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4824456830707285274,9526524351189421487));
					return _ufle12jhs77_EnergyCardDropPercent;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_HealCardStartCount;
			public static BansheeGz.BGDatabase.BGFieldInt _HealCardStartCount
			{
				get
				{
					if(_ufle12jhs77_HealCardStartCount==null || _ufle12jhs77_HealCardStartCount.IsDeleted) _ufle12jhs77_HealCardStartCount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4985046966208387490,16469731964315584419));
					return _ufle12jhs77_HealCardStartCount;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_HealCardMaxCount;
			public static BansheeGz.BGDatabase.BGFieldInt _HealCardMaxCount
			{
				get
				{
					if(_ufle12jhs77_HealCardMaxCount==null || _ufle12jhs77_HealCardMaxCount.IsDeleted) _ufle12jhs77_HealCardMaxCount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4907606144666624732,11181219685480063642));
					return _ufle12jhs77_HealCardMaxCount;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_HealCardDropPercent;
			public static BansheeGz.BGDatabase.BGFieldFloat _HealCardDropPercent
			{
				get
				{
					if(_ufle12jhs77_HealCardDropPercent==null || _ufle12jhs77_HealCardDropPercent.IsDeleted) _ufle12jhs77_HealCardDropPercent=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4698945852063189845,1063945283898131586));
					return _ufle12jhs77_HealCardDropPercent;
				}
			}
			private static readonly TBL_MOVE_CARD.Factory _factory0_PFS = new TBL_MOVE_CARD.Factory();
			private static readonly TBL_ATTACK_CARD.Factory _factory1_PFS = new TBL_ATTACK_CARD.Factory();
			private static readonly TBL_ENERGY_CARD.Factory _factory2_PFS = new TBL_ENERGY_CARD.Factory();
			private static readonly TBL_HEAL_CARD.Factory _factory3_PFS = new TBL_HEAL_CARD.Factory();
			private static readonly TBL_GUARD_CARD.Factory _factory4_PFS = new TBL_GUARD_CARD.Factory();
			private static readonly TBL_CARD_SETTINNG.Factory _factory5_PFS = new TBL_CARD_SETTINNG.Factory();
			private static readonly TBL_STAGE.Factory _factory6_PFS = new TBL_STAGE.Factory();
			private static readonly TBL_GAME_SETTING.Factory _factory7_PFS = new TBL_GAME_SETTING.Factory();
			public TBL_CARD_SETTINNG() : base(MetaDefault)
			{
			}
			public TBL_CARD_SETTINNG(BGId id) : base(MetaDefault, id)
			{
			}
			public TBL_CARD_SETTINNG(BGMetaEntity meta) : base(meta)
			{
			}
			public TBL_CARD_SETTINNG(BGMetaEntity meta, BGId id) : base(meta, id)
			{
			}
			public static TBL_CARD_SETTINNG FindEntity(Predicate<TBL_CARD_SETTINNG> filter)
			{
				return MetaDefault.FindEntity(entity => filter==null || filter((TBL_CARD_SETTINNG) entity)) as TBL_CARD_SETTINNG;
			}
			public static List<TBL_CARD_SETTINNG> FindEntities(Predicate<TBL_CARD_SETTINNG> filter, List<TBL_CARD_SETTINNG> result=null, Comparison<TBL_CARD_SETTINNG> sort=null)
			{
				result = result ?? new List<TBL_CARD_SETTINNG>();
				_find_Entities_Result.Clear();
				MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_CARD_SETTINNG) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_CARD_SETTINNG) e1, (TBL_CARD_SETTINNG) e2));
				if (_find_Entities_Result.Count != 0)
				{
					for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_CARD_SETTINNG) _find_Entities_Result[i]);
					_find_Entities_Result.Clear();
				}
				return result;
			}
			public static void ForEachEntity(Action<TBL_CARD_SETTINNG> action, Predicate<TBL_CARD_SETTINNG> filter=null, Comparison<TBL_CARD_SETTINNG> sort=null)
			{
				MetaDefault.ForEachEntity(entity => action((TBL_CARD_SETTINNG) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_CARD_SETTINNG) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_CARD_SETTINNG)e1,(TBL_CARD_SETTINNG)e2));
			}
			public static TBL_CARD_SETTINNG GetEntity(BGId entityId)
			{
				return (TBL_CARD_SETTINNG) MetaDefault.GetEntity(entityId);
			}
			public static TBL_CARD_SETTINNG GetEntity(int index)
			{
				return (TBL_CARD_SETTINNG) MetaDefault[index];
			}
			public static TBL_CARD_SETTINNG GetEntity(string entityName)
			{
				return (TBL_CARD_SETTINNG) MetaDefault.GetEntity(entityName);
			}
			public static TBL_CARD_SETTINNG NewEntity()
			{
				return (TBL_CARD_SETTINNG) MetaDefault.NewEntity();
			}
		}


		//=============================================================
		//||                   Generated by BansheeGz Code Generator ||
		//=============================================================

		public partial class TBL_STAGE : BGEntity
		{

			//=============================================================
			//||                   Generated by BansheeGz Code Generator ||
			//=============================================================

			public class Factory : BGEntity.EntityFactory
			{
				public BGEntity NewEntity(BGMetaEntity meta)
				{
					return new TBL_STAGE(meta);
				}
				public BGEntity NewEntity(BGMetaEntity meta, BGId id)
				{
					return new TBL_STAGE(meta, id);
				}
			}
			private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
			public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
			{
				get
				{
					if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5579649511491131423,8841069506006952894));
					return _metaDefault;
				}
			}
			public static BansheeGz.BGDatabase.BGRepoEvents Events
			{
				get
				{
					return BGRepo.I.Events;
				}
			}
			private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
			public static int CountEntities
			{
				get
				{
					return MetaDefault.CountEntities;
				}
			}
			public System.String name
			{
				get
				{
					return _name[Index];
				}
				set
				{
					_name[Index] = value;
				}
			}
			public System.Int32 EnemyHP
			{
				get
				{
					return _EnemyHP[Index];
				}
				set
				{
					_EnemyHP[Index] = value;
				}
			}
			public System.Int32 EnemyEnergy
			{
				get
				{
					return _EnemyEnergy[Index];
				}
				set
				{
					_EnemyEnergy[Index] = value;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
			public static BansheeGz.BGDatabase.BGFieldEntityName _name
			{
				get
				{
					if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5627355828909825215,5599014873928127632));
					return _ufle12jhs77_name;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_EnemyHP;
			public static BansheeGz.BGDatabase.BGFieldInt _EnemyHP
			{
				get
				{
					if(_ufle12jhs77_EnemyHP==null || _ufle12jhs77_EnemyHP.IsDeleted) _ufle12jhs77_EnemyHP=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5083684694916914970,17762034587833632680));
					return _ufle12jhs77_EnemyHP;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_EnemyEnergy;
			public static BansheeGz.BGDatabase.BGFieldInt _EnemyEnergy
			{
				get
				{
					if(_ufle12jhs77_EnemyEnergy==null || _ufle12jhs77_EnemyEnergy.IsDeleted) _ufle12jhs77_EnemyEnergy=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5082741113747936438,2034206944844102566));
					return _ufle12jhs77_EnemyEnergy;
				}
			}
			private static readonly TBL_MOVE_CARD.Factory _factory0_PFS = new TBL_MOVE_CARD.Factory();
			private static readonly TBL_ATTACK_CARD.Factory _factory1_PFS = new TBL_ATTACK_CARD.Factory();
			private static readonly TBL_ENERGY_CARD.Factory _factory2_PFS = new TBL_ENERGY_CARD.Factory();
			private static readonly TBL_HEAL_CARD.Factory _factory3_PFS = new TBL_HEAL_CARD.Factory();
			private static readonly TBL_GUARD_CARD.Factory _factory4_PFS = new TBL_GUARD_CARD.Factory();
			private static readonly TBL_CARD_SETTINNG.Factory _factory5_PFS = new TBL_CARD_SETTINNG.Factory();
			private static readonly TBL_STAGE.Factory _factory6_PFS = new TBL_STAGE.Factory();
			private static readonly TBL_GAME_SETTING.Factory _factory7_PFS = new TBL_GAME_SETTING.Factory();
			public TBL_STAGE() : base(MetaDefault)
			{
			}
			public TBL_STAGE(BGId id) : base(MetaDefault, id)
			{
			}
			public TBL_STAGE(BGMetaEntity meta) : base(meta)
			{
			}
			public TBL_STAGE(BGMetaEntity meta, BGId id) : base(meta, id)
			{
			}
			public static TBL_STAGE FindEntity(Predicate<TBL_STAGE> filter)
			{
				return MetaDefault.FindEntity(entity => filter==null || filter((TBL_STAGE) entity)) as TBL_STAGE;
			}
			public static List<TBL_STAGE> FindEntities(Predicate<TBL_STAGE> filter, List<TBL_STAGE> result=null, Comparison<TBL_STAGE> sort=null)
			{
				result = result ?? new List<TBL_STAGE>();
				_find_Entities_Result.Clear();
				MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_STAGE) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_STAGE) e1, (TBL_STAGE) e2));
				if (_find_Entities_Result.Count != 0)
				{
					for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_STAGE) _find_Entities_Result[i]);
					_find_Entities_Result.Clear();
				}
				return result;
			}
			public static void ForEachEntity(Action<TBL_STAGE> action, Predicate<TBL_STAGE> filter=null, Comparison<TBL_STAGE> sort=null)
			{
				MetaDefault.ForEachEntity(entity => action((TBL_STAGE) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_STAGE) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_STAGE)e1,(TBL_STAGE)e2));
			}
			public static TBL_STAGE GetEntity(BGId entityId)
			{
				return (TBL_STAGE) MetaDefault.GetEntity(entityId);
			}
			public static TBL_STAGE GetEntity(int index)
			{
				return (TBL_STAGE) MetaDefault[index];
			}
			public static TBL_STAGE GetEntity(string entityName)
			{
				return (TBL_STAGE) MetaDefault.GetEntity(entityName);
			}
			public static TBL_STAGE NewEntity()
			{
				return (TBL_STAGE) MetaDefault.NewEntity();
			}
		}


		//=============================================================
		//||                   Generated by BansheeGz Code Generator ||
		//=============================================================

		public partial class TBL_GAME_SETTING : BGEntity
		{

			//=============================================================
			//||                   Generated by BansheeGz Code Generator ||
			//=============================================================

			public class Factory : BGEntity.EntityFactory
			{
				public BGEntity NewEntity(BGMetaEntity meta)
				{
					return new TBL_GAME_SETTING(meta);
				}
				public BGEntity NewEntity(BGMetaEntity meta, BGId id)
				{
					return new TBL_GAME_SETTING(meta, id);
				}
			}
			private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
			public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
			{
				get
				{
					if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5224996204354841887,15747984042247362442));
					return _metaDefault;
				}
			}
			public static BansheeGz.BGDatabase.BGRepoEvents Events
			{
				get
				{
					return BGRepo.I.Events;
				}
			}
			private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
			public static int CountEntities
			{
				get
				{
					return MetaDefault.CountEntities;
				}
			}
			public System.String name
			{
				get
				{
					return _name[Index];
				}
				set
				{
					_name[Index] = value;
				}
			}
			public System.Int32 PlayerStartHP
			{
				get
				{
					return _PlayerStartHP[Index];
				}
				set
				{
					_PlayerStartHP[Index] = value;
				}
			}
			public System.Int32 PlayerStartEnergy
			{
				get
				{
					return _PlayerStartEnergy[Index];
				}
				set
				{
					_PlayerStartEnergy[Index] = value;
				}
			}
			public System.Int32 CardSelectTime
			{
				get
				{
					return _CardSelectTime[Index];
				}
				set
				{
					_CardSelectTime[Index] = value;
				}
			}
			public System.Single MoveCardTime
			{
				get
				{
					return _MoveCardTime[Index];
				}
				set
				{
					_MoveCardTime[Index] = value;
				}
			}
			public System.Single AttackCardTime
			{
				get
				{
					return _AttackCardTime[Index];
				}
				set
				{
					_AttackCardTime[Index] = value;
				}
			}
			public System.Single GuardCardTime
			{
				get
				{
					return _GuardCardTime[Index];
				}
				set
				{
					_GuardCardTime[Index] = value;
				}
			}
			public System.Single HealCardTime
			{
				get
				{
					return _HealCardTime[Index];
				}
				set
				{
					_HealCardTime[Index] = value;
				}
			}
			public System.Single EnergyCardTime
			{
				get
				{
					return _EnergyCardTime[Index];
				}
				set
				{
					_EnergyCardTime[Index] = value;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
			public static BansheeGz.BGDatabase.BGFieldEntityName _name
			{
				get
				{
					if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5147764020304343539,3175393921144863909));
					return _ufle12jhs77_name;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_PlayerStartHP;
			public static BansheeGz.BGDatabase.BGFieldInt _PlayerStartHP
			{
				get
				{
					if(_ufle12jhs77_PlayerStartHP==null || _ufle12jhs77_PlayerStartHP.IsDeleted) _ufle12jhs77_PlayerStartHP=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5320362363947938443,17888663973964396477));
					return _ufle12jhs77_PlayerStartHP;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_PlayerStartEnergy;
			public static BansheeGz.BGDatabase.BGFieldInt _PlayerStartEnergy
			{
				get
				{
					if(_ufle12jhs77_PlayerStartEnergy==null || _ufle12jhs77_PlayerStartEnergy.IsDeleted) _ufle12jhs77_PlayerStartEnergy=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4948676617552623030,7844720354970515637));
					return _ufle12jhs77_PlayerStartEnergy;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_CardSelectTime;
			public static BansheeGz.BGDatabase.BGFieldInt _CardSelectTime
			{
				get
				{
					if(_ufle12jhs77_CardSelectTime==null || _ufle12jhs77_CardSelectTime.IsDeleted) _ufle12jhs77_CardSelectTime=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5473396789706933446,485166437803012005));
					return _ufle12jhs77_CardSelectTime;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_MoveCardTime;
			public static BansheeGz.BGDatabase.BGFieldFloat _MoveCardTime
			{
				get
				{
					if(_ufle12jhs77_MoveCardTime==null || _ufle12jhs77_MoveCardTime.IsDeleted) _ufle12jhs77_MoveCardTime=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5330299961304312493,9998610105832550286));
					return _ufle12jhs77_MoveCardTime;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_AttackCardTime;
			public static BansheeGz.BGDatabase.BGFieldFloat _AttackCardTime
			{
				get
				{
					if(_ufle12jhs77_AttackCardTime==null || _ufle12jhs77_AttackCardTime.IsDeleted) _ufle12jhs77_AttackCardTime=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4949040566732867991,10845203043196155816));
					return _ufle12jhs77_AttackCardTime;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_GuardCardTime;
			public static BansheeGz.BGDatabase.BGFieldFloat _GuardCardTime
			{
				get
				{
					if(_ufle12jhs77_GuardCardTime==null || _ufle12jhs77_GuardCardTime.IsDeleted) _ufle12jhs77_GuardCardTime=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5684670301775814087,17196610482583660459));
					return _ufle12jhs77_GuardCardTime;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_HealCardTime;
			public static BansheeGz.BGDatabase.BGFieldFloat _HealCardTime
			{
				get
				{
					if(_ufle12jhs77_HealCardTime==null || _ufle12jhs77_HealCardTime.IsDeleted) _ufle12jhs77_HealCardTime=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5700384548038912524,1357230293032668316));
					return _ufle12jhs77_HealCardTime;
				}
			}
			private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_EnergyCardTime;
			public static BansheeGz.BGDatabase.BGFieldFloat _EnergyCardTime
			{
				get
				{
					if(_ufle12jhs77_EnergyCardTime==null || _ufle12jhs77_EnergyCardTime.IsDeleted) _ufle12jhs77_EnergyCardTime=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4680359010423266922,8249753946533669019));
					return _ufle12jhs77_EnergyCardTime;
				}
			}
			private static readonly TBL_MOVE_CARD.Factory _factory0_PFS = new TBL_MOVE_CARD.Factory();
			private static readonly TBL_ATTACK_CARD.Factory _factory1_PFS = new TBL_ATTACK_CARD.Factory();
			private static readonly TBL_ENERGY_CARD.Factory _factory2_PFS = new TBL_ENERGY_CARD.Factory();
			private static readonly TBL_HEAL_CARD.Factory _factory3_PFS = new TBL_HEAL_CARD.Factory();
			private static readonly TBL_GUARD_CARD.Factory _factory4_PFS = new TBL_GUARD_CARD.Factory();
			private static readonly TBL_CARD_SETTINNG.Factory _factory5_PFS = new TBL_CARD_SETTINNG.Factory();
			private static readonly TBL_STAGE.Factory _factory6_PFS = new TBL_STAGE.Factory();
			private static readonly TBL_GAME_SETTING.Factory _factory7_PFS = new TBL_GAME_SETTING.Factory();
			public TBL_GAME_SETTING() : base(MetaDefault)
			{
			}
			public TBL_GAME_SETTING(BGId id) : base(MetaDefault, id)
			{
			}
			public TBL_GAME_SETTING(BGMetaEntity meta) : base(meta)
			{
			}
			public TBL_GAME_SETTING(BGMetaEntity meta, BGId id) : base(meta, id)
			{
			}
			public static TBL_GAME_SETTING FindEntity(Predicate<TBL_GAME_SETTING> filter)
			{
				return MetaDefault.FindEntity(entity => filter==null || filter((TBL_GAME_SETTING) entity)) as TBL_GAME_SETTING;
			}
			public static List<TBL_GAME_SETTING> FindEntities(Predicate<TBL_GAME_SETTING> filter, List<TBL_GAME_SETTING> result=null, Comparison<TBL_GAME_SETTING> sort=null)
			{
				result = result ?? new List<TBL_GAME_SETTING>();
				_find_Entities_Result.Clear();
				MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_GAME_SETTING) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_GAME_SETTING) e1, (TBL_GAME_SETTING) e2));
				if (_find_Entities_Result.Count != 0)
				{
					for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_GAME_SETTING) _find_Entities_Result[i]);
					_find_Entities_Result.Clear();
				}
				return result;
			}
			public static void ForEachEntity(Action<TBL_GAME_SETTING> action, Predicate<TBL_GAME_SETTING> filter=null, Comparison<TBL_GAME_SETTING> sort=null)
			{
				MetaDefault.ForEachEntity(entity => action((TBL_GAME_SETTING) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_GAME_SETTING) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_GAME_SETTING)e1,(TBL_GAME_SETTING)e2));
			}
			public static TBL_GAME_SETTING GetEntity(BGId entityId)
			{
				return (TBL_GAME_SETTING) MetaDefault.GetEntity(entityId);
			}
			public static TBL_GAME_SETTING GetEntity(int index)
			{
				return (TBL_GAME_SETTING) MetaDefault[index];
			}
			public static TBL_GAME_SETTING GetEntity(string entityName)
			{
				return (TBL_GAME_SETTING) MetaDefault.GetEntity(entityName);
			}
			public static TBL_GAME_SETTING NewEntity()
			{
				return (TBL_GAME_SETTING) MetaDefault.NewEntity();
			}
		}

#pragma warning restore 414
